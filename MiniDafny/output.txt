(set-option :print-success false)
(set-option :produce-models true)
(set-logic UFLIA)
(push 1)
(declare-fun a () Int)
(declare-fun b () Int)
(declare-fun b0 () Int)
(declare-fun ba1 () Int)
(declare-fun Assert () Bool)
(assert (not (=> (= a 2) (=> (= b0 b) (=> (= ba1 2) (and (or (= ba1 3) Assert) true))))))
(declare-fun x () Int)
(declare-fun za1 () Int)
(declare-fun z1 () Int)
(declare-fun z0 () Int)
(declare-fun z () Int)
(assert (not (=> (= x 0) (and (= 2 2) (=> (= z0 3) (=> (= z1 z) (=> (= za1 z0) (and (or (= za1 2) Assert) true))))))))
(check-sat)
(get-model)
(pop 1)
